---
import BaseLayout from '../../../layouts/BaseLayout.astro';
import { Badge } from '../../../components/Badge';
import {
  getAllProjects,
  getProjectById,
  type ProjectFrontmatter,
} from '../../../lib/project';
import AstroIcon from '../../../components/AstroIcon.astro';
import { ProjectTabs } from '../../../components/Projects/ProjectTabs';
import { ListProjectSolutions } from '../../../components/Projects/ListProjectSolutions';

export async function getStaticPaths() {
  const projects = await getAllProjects();

  return projects
    .map((project) => project.id)
    .map((projectId) => ({
      params: { projectId },
    }));
}

interface Params extends Record<string, string | undefined> {
  projectId: string;
}

const { projectId } = Astro.params as Params;

const project = await getProjectById(projectId);
const projectData = project.frontmatter as ProjectFrontmatter;

let jsonLdSchema: any[] = [];

const ogImageUrl = projectData?.seo?.ogImageUrl || '/images/og-img.png';
const githubUrl = `https://github.com/kamranahmedse/developer-roadmap/tree/master/src/data/projects/${projectId}.md`;
---

<BaseLayout
  permalink={`/projects/${projectId}`}
  title={projectData?.seo?.title}
  briefTitle={projectData.title}
  ogImageUrl={ogImageUrl}
  description={projectData.seo.description}
  keywords={projectData.seo.keywords}
  jsonLd={jsonLdSchema}
  resourceId={projectId}
>
  <div class='bg-gray-50'>
    <div class='container'>
      <ProjectTabs projectId={projectId} activeTab='solutions' />

      <div class='overflow-hidden rounded-lg border bg-white p-5 mb-4'>
        <div class='relative -mx-2 -mt-2 mb-5 rounded-lg bg-gray-100/70 p-5'>
          <div class='absolute right-2 top-2'>
            <Badge variant='yellow' text={projectData.difficulty} />
          </div>
          <div class='mb-5'>
            <h1 class='mb-1.5 text-3xl font-semibold'>{projectData.title} Solutions</h1>
            <p class='text-gray-500'>{projectData.description}</p>
          </div>

          <div class='mt-4'>
            <div class='flex flex-row flex-wrap gap-1.5'>
              {
                projectData.skills.map((skill) => (
                  <Badge variant='green' text={skill} />
                ))
              }
            </div>
          </div>
        </div>
        <ListProjectSolutions projectId={projectId} client:load />
      </div>
    </div>
  </div>
</BaseLayout>
